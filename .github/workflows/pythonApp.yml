# This workflow will install Python dependencies and lint with a single version of Python

name: Python application

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Clone Repository
      uses: actions/checkout@master 
    - name: Wemake Python Stylguide
      uses: wemake-services/wemake-python-styleguide@0.13.4
      continue-on-error: true
      with:
        reporter: "github-pr-review"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      # - name: Test with pytest
      #   run: |
      #     pip install pytest
      #     # pytest
      #     pip install pytest-cov
      #     pytest --cov=./ --cov-report=xml
      # - name: Upload coverage to Codecov
      #   uses: codecov/codecov-action@v1
      #   with:
      #     token: ${{ secrets.CODECOV_TOKEN }}
      #     file: ./coverage.xml
      #     flags: unittests

    - name: vulernability check in dependcies
      run: |
        pip install safety
        safety check --full-report
    - name: Analyze with SonarCloud
      uses: sonarsource/sonarcloud-github-action@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONARTOKEN }}
    - name: Run Snyk to check for vulnerabilities
      uses: snyk/actions/python@master
      env:
        SNYK_TOKEN: ${{ secrets.SNYKTOKEN }}
      with:
        args: --severity-threshold=high
        command: monitor
        